<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>459260250.73768198</real>
		<key>CustomIconData</key>
		<string>KMEP-GenericApplication-/Applications/Keyboard Maestro.app</string>
		<key>IsActive</key>
		<false/>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>ActionUID</key>
						<integer>15481190</integer>
						<key>Asynchronously</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteMacro</string>
						<key>MacroUID</key>
						<string>290D7EEA-BBC3-4164-9D0B-321362D95057</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>UseParameter</key>
						<false/>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>15481191</integer>
						<key>MacroActionType</key>
						<string>SelectMenuItem</string>
						<key>Menu</key>
						<array>
							<string>File</string>
							<string>Export Macros...</string>
						</array>
						<key>TargetApplication</key>
						<dict/>
						<key>TargetingType</key>
						<string>Front</string>
					</dict>
					<dict>
						<key>ActionUID</key>
						<integer>15481192</integer>
						<key>KeyCode</key>
						<integer>36</integer>
						<key>MacroActionType</key>
						<string>SimulateKeystroke</string>
						<key>Modifiers</key>
						<integer>0</integer>
						<key>ReleaseAll</key>
						<false/>
						<key>TargetApplication</key>
						<dict/>
						<key>TargetingType</key>
						<string>Front</string>
					</dict>
					<dict>
						<key>ActionName</key>
						<string>Open Keyboard Maestro forum in Safari or switch to a tab with it</string>
						<key>ActionUID</key>
						<integer>15481193</integer>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>Application</key>
									<dict>
										<key>BundleIdentifier</key>
										<string>com.apple.Safari</string>
										<key>Name</key>
										<string>Safari</string>
										<key>NewFile</key>
										<string>/Applications/Safari.app</string>
									</dict>
									<key>ApplicationConditionType</key>
									<string>NotActive</string>
									<key>ConditionType</key>
									<string>Application</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>15481196</integer>
								<key>DisplayKind</key>
								<string>None</string>
								<key>HonourFailureSettings</key>
								<true/>
								<key>IncludeStdErr</key>
								<true/>
								<key>IncludedVariables</key>
								<array>
									<string>9999</string>
								</array>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "forum.keyboardmaestro.com"
set urlToFetch to "https://forum.keyboardmaestro.com/latest"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>ActionUID</key>
								<integer>15481194</integer>
								<key>AllWindows</key>
								<true/>
								<key>AlreadyActivatedActionType</key>
								<string>Normal</string>
								<key>Application</key>
								<dict>
									<key>BundleIdentifier</key>
									<string>com.apple.Safari</string>
									<key>Name</key>
									<string>Safari</string>
									<key>NewFile</key>
									<string>/Applications/Safari.app</string>
								</dict>
								<key>MacroActionType</key>
								<string>ActivateApplication</string>
								<key>ReopenWindows</key>
								<false/>
								<key>TimeOutAbortsMacro</key>
								<true/>
							</dict>
							<dict>
								<key>ActionUID</key>
								<integer>15481195</integer>
								<key>DisplayKind</key>
								<string>None</string>
								<key>HonourFailureSettings</key>
								<true/>
								<key>IncludeStdErr</key>
								<true/>
								<key>IncludedVariables</key>
								<array>
									<string>9999</string>
								</array>
								<key>MacroActionType</key>
								<string>ExecuteAppleScript</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>------------------------------------------------------------------------------
# Auth: Christopher Stone
# dCre: 2017/01/06 19:04
# dMod: 2017/03/06 17:40
# Appl: Safari
# Task: Serially switch between tabs having the same domain (or other filter text in the URL) in the front window.
#     : 2017/03/06 – Now opens a new tab if the urlFilterText isn't found.
# Libs: None
# Osax: None
# Tags: @Applescript, @Script, @Safari, @Serially, @Switch, @Tabs, @Domain, @Filter, @Front, @Window
# Vers: 2.0
------------------------------------------------------------------------------

set urlFilterText to "forum.keyboardmaestro.com"
set urlToFetch to "https://forum.keyboardmaestro.com/latest"

tell application "Safari"
	tell front window
		set filteredTabIndexList to index of tabs where its URL contains urlFilterText
		set currentTabIndex to index of current tab
		
		if filteredTabIndexList = {} then -- New
			
			set tabURL to URL of current tab
			
			try
				tabURL -- will be undefine if blank
				make new tab at end of tabs with properties {URL:urlToFetch}
				set current tab to last tab
			on error
				# Tab is blank, so we'll just use it.
				set its current tab's URL to urlToFetch
			end try
			
			return
			
		end if
		
		if currentTabIndex is in filteredTabIndexList and currentTabIndex ≠ (last item of filteredTabIndexList) then
			set listItemOffset to getListItemOffset(filteredTabIndexList, currentTabIndex) of me
			set current tab to tab (item (listItemOffset + 1) of filteredTabIndexList)
		else
			set current tab to tab (item 1 of filteredTabIndexList)
		end if
		
	end tell
end tell

------------------------------------------------------------------------------
--» HANDLERS
------------------------------------------------------------------------------
on getListItemOffset(theList, listItemValue)
	if listItemValue is not in theList then error "getListItemOffset():  “listItemValue” is not in “theList”!"
	repeat with listItemNum from 1 to (length of theList)
		if (item listItemNum of theList) = listItemValue then
			return listItemNum
		end if
	end repeat
end getListItemOffset
------------------------------------------------------------------------------</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>535560335.58839601</real>
				<key>ModificationDate</key>
				<real>574855441.63747704</real>
				<key>Name</key>
				<string>Export macro and image to Desktop [select macro]</string>
				<key>Triggers</key>
				<array/>
				<key>UID</key>
				<string>63055F9B-FCBA-4F53-881A-EDF1F112E8D8</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Keyboard Maestro</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.stairways.keyboardmaestro.editor</string>
					<key>Name</key>
					<string>Keyboard Maestro</string>
					<key>NewFile</key>
					<string>/Applications/Keyboard Maestro.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>FAFC6E75-FB12-4D49-8A67-ABB716F81675</string>
		<key>UID</key>
		<string>FDD12D74-6731-4C29-8579-83C6A11C3F6A</string>
	</dict>
</array>
</plist>
